DROP SCHEMA IF EXISTS NEWARK_IT;
CREATE SCHEMA IF NOT EXISTS NEWARK_IT;
USE NEWARK_IT;

-- ************************************** NEWARK_IT.CUSTOMER
DROP TABLE IF EXISTS NEWARK_IT.CUSTOMER;
CREATE TABLE IF NOT EXISTS NEWARK_IT.CUSTOMER
(
 CID                serial NOT NULL ,
 FNAME              varchar(255) NOT NULL ,
 LNAME              varchar(255) NOT NULL ,
 EMAIL              varchar(255) NOT NULL UNIQUE ,
 ADDRESS            text NOT NULL ,
 PHONE              bigint NOT NULL ,
 STATUS             varchar(255) NOT NULL ,
PRIMARY KEY (CID)
);

-- ************************************** NEWARK_IT.CREDIT_CARD
DROP TABLE IF EXISTS NEWARK_IT.CREDIT_CARD;
CREATE TABLE IF NOT EXISTS NEWARK_IT.CREDIT_CARD
(
 CCNUMBER           bigint NOT NULL ,
 SECNUMBER          integer NOT NULL ,
 OWNERNAME          varchar(255) NOT NULL ,
 CCTYPE             varchar(255) NOT NULL ,
 BILLADDRESS        text NOT NULL ,
 EXPDATE            date NOT NULL ,
 STOREDCARDCID      bigint unsigned NOT NULL ,
PRIMARY KEY (CCNUMBER),
FOREIGN KEY (STOREDCARDCID) REFERENCES NEWARK_IT.CUSTOMER (CID)
);

-- ************************************** NEWARK_IT.SHIPPING_ADDRESS
DROP TABLE IF EXISTS NEWARK_IT.SHIPPING_ADDRESS;
CREATE TABLE IF NOT EXISTS NEWARK_IT.SHIPPING_ADDRESS
(
 CID                bigint unsigned NOT NULL ,
 SANAME             varchar(255) NOT NULL ,
 RECEPIENTNAME      varchar(255) NOT NULL ,
 STREET             varchar(255) NOT NULL ,
 SNUMBER            varchar(255) NOT NULL ,
 CITY               varchar(255) NOT NULL ,
 ZIP                varchar(255) NOT NULL ,
 STATE              varchar(255) NOT NULL ,
 COUNTRY            varchar(255) NOT NULL ,
PRIMARY KEY (SANAME, CID),
FOREIGN KEY (CID) REFERENCES NEWARK_IT.CUSTOMER (CID)
);

-- ************************************** NEWARK_IT.PRODUCT
DROP TABLE IF EXISTS NEWARK_IT.PRODUCT;
CREATE TABLE IF NOT EXISTS NEWARK_IT.PRODUCT
(
 PID                serial NOT NULL ,
 PTYPE              text NOT NULL ,
 PNAME              varchar(255) NOT NULL ,
 PPRICE             float NOT NULL ,
 DESCRIPTION        text NOT NULL ,
 PQUANTITY          integer NOT NULL ,
PRIMARY KEY (PID)
);

-- ************************************** NEWARK_IT.DESKTOP
DROP TABLE IF EXISTS NEWARK_IT.DESKTOP;
CREATE TABLE IF NOT EXISTS NEWARK_IT.DESKTOP
(
 PID                bigint unsigned NOT NULL ,
 CPUTYPE            varchar(255) NOT NULL ,
PRIMARY KEY (PID),
FOREIGN KEY (PID) REFERENCES NEWARK_IT.PRODUCT (PID)
);

-- ************************************** NEWARK_IT.LAPTOP
DROP TABLE IF EXISTS NEWARK_IT.LAPTOP;
CREATE TABLE IF NOT EXISTS NEWARK_IT.LAPTOP
(
 PID                bigint unsigned NOT NULL ,
 BTYPE              time NOT NULL ,
 WEIGHT             integer NOT NULL ,
PRIMARY KEY (PID),
FOREIGN KEY (PID) REFERENCES NEWARK_IT.DESKTOP (PID)
);

-- ************************************** NEWARK_IT.PRINTER
DROP TABLE IF EXISTS NEWARK_IT.PRINTER;
CREATE TABLE IF NOT EXISTS NEWARK_IT.PRINTER
(
 PID                bigint unsigned NOT NULL ,
 RESOLUTION         varchar(255) NOT NULL ,
 PRINTERTYPE        varchar(255) NOT NULL ,
PRIMARY KEY (PID),
FOREIGN KEY (PID) REFERENCES NEWARK_IT.PRODUCT (PID)
);

-- ************************************** NEWARK_IT.OFFER_PRODUCT
DROP TABLE IF EXISTS NEWARK_IT.OFFER_PRODUCT;
CREATE TABLE IF NOT EXISTS NEWARK_IT.OFFER_PRODUCT
(
 PID                bigint unsigned NOT NULL ,
 OFFERPRICE         float NOT NULL ,
PRIMARY KEY (PID),
FOREIGN KEY (PID) REFERENCES NEWARK_IT.PRODUCT (PID)
);

-- ************************************** NEWARK_IT.BASKET
DROP TABLE IF EXISTS NEWARK_IT.BASKET;
CREATE TABLE IF NOT EXISTS NEWARK_IT.BASKET
(
 BID                serial NOT NULL ,
 CID                bigint unsigned NOT NULL ,
PRIMARY KEY (BID),
FOREIGN KEY (CID) REFERENCES NEWARK_IT.CUSTOMER (CID)
);

-- ************************************** NEWARK_IT.TRANSACTION
DROP TABLE IF EXISTS NEWARK_IT.TRANSACTION;
CREATE TABLE IF NOT EXISTS NEWARK_IT.TRANSACTION
(
 BID                bigint unsigned NOT NULL ,
 CCNUMBER           integer NOT NULL ,
 CID                bigint unsigned NOT NULL ,
 SANAME             varchar(255) NOT NULL ,
 TDATE              date NOT NULL ,
 TTAG               varchar(255) NOT NULL ,
PRIMARY KEY (BID, CCNUMBER, CID, SANAME),
FOREIGN KEY (BID) REFERENCES NEWARK_IT.BASKET (BID),
FOREIGN KEY (CCNUMBER) REFERENCES NEWARK_IT.CREDIT_CARD (CCNUMBER),
FOREIGN KEY (CID) REFERENCES NEWARK_IT.CUSTOMER (CID),
FOREIGN KEY (SANAME) REFERENCES NEWARK_IT.SHIPPING_ADDRESS (SANAME)
);

-- ************************************** NEWARK_IT.APPEARS_IN
DROP TABLE IF EXISTS NEWARK_IT.APPEARS_IN;
CREATE TABLE IF NOT EXISTS NEWARK_IT.APPEARS_IN
(
 BID                bigint unsigned NOT NULL ,
 PID                bigint unsigned NOT NULL ,
 QUANTITY           integer NOT NULL ,
 PRICESOLD          integer NOT NULL ,
PRIMARY KEY (BID, PID),
FOREIGN KEY (BID) REFERENCES NEWARK_IT.BASKET (BID),
FOREIGN KEY (PID) REFERENCES NEWARK_IT.PRODUCT (PID)
);

-- ************************************** NEWARK_IT.SILVER_AND_ABOVE
DROP TABLE IF EXISTS NEWARK_IT.SILVER_AND_ABOVE;
CREATE TABLE IF NOT EXISTS NEWARK_IT.SILVER_AND_ABOVE
(
 CID                bigint unsigned NOT NULL ,
 CREDITLINE         integer NOT NULL ,
PRIMARY KEY (CID),
FOREIGN KEY (CID) REFERENCES NEWARK_IT.CUSTOMER (CID)
);

-- ************************************** ADDITIONAL CONSTRAINTS

ALTER TABLE NEWARK_IT.CUSTOMER
ADD CONSTRAINT CHECK_STATUS_DOMAIN CHECK (STATUS IN ('Silver', 'Gold', 'Platinum'));

ALTER TABLE NEWARK_IT.CUSTOMER
ALTER COLUMN STATUS SET DEFAULT 'Silver';

-- ALTER TABLE NEWARK_IT.SILVER_AND_ABOVE
-- ADD CONSTRAINT CHECK_CREDITLINE_STATUS
-- CHECK (
--     STATUS = 'Platinum' AND
--     CREDITLINE IS NOT NULL
-- );

-- ALTER TABLE NEWARK_IT.CREDIT_CARD
-- ADD CONSTRAINT FK_CUSTOMER_CREDIT_CARD
-- FOREIGN KEY (STOREDCARDCID)
-- REFERENCES NEWARK_IT.CUSTOMER (CID)
-- ON DELETE CASCADE;

ALTER TABLE NEWARK_IT.PRODUCT
ADD CONSTRAINT CHECK_PRODUCT_PRICE CHECK (PPRICE > 0);

-- ALTER TABLE NEWARK_IT.APPEARS_IN
-- ADD CONSTRAINT CHECK_QUANTITY_SUM
-- CHECK (APPEARS_IN.QUANTITY <= (SELECT PRODUCT.PQUANTITY FROM NEWARK_IT.PRODUCT WHERE PID = APPEARS_IN.PID));
